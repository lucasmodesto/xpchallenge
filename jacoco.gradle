apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.5"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    def fileFilter = ['**/R.class', '**/R$*.class',
                      '**/BuildConfig.*', '**/Manifest*.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*$Lambda$*.*',
                      '**/*Module.*',
                      '**/*Dagger*.*',
                      '**/*Component.*',
                      '**/*Hilt*.*',
                      '**/*MembersInjector*.*',
                      '**/*_Provide*Factory*.*',
                      '**/*_Factory.*',
                      '**/*$*$*.*',
                      'android/**/*.*']

    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)

    def mainSrc = "/src/main/java"

    additionalSourceDirs.from = files(mainSrc)
    sourceDirectories.setFrom files([mainSrc])
    classDirectories.setFrom files([debugTree])
    executionData.setFrom fileTree(dir: project.projectDir, includes:
            ['**/*.exec' , '**/*.ec'])

    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = true
    }
}